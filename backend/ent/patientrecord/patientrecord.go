// Code generated by entc, DO NOT EDIT.

package patientrecord

const (
	// Label holds the string label denoting the patientrecord type in the database.
	Label = "patientrecord"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldIdcardnumber holds the string denoting the idcardnumber field in the database.
	FieldIdcardnumber = "idcardnumber"
	// FieldAge holds the string denoting the age field in the database.
	FieldAge = "age"
	// FieldDisease holds the string denoting the disease field in the database.
	FieldDisease = "disease"
	// FieldAllergic holds the string denoting the allergic field in the database.
	FieldAllergic = "allergic"
	// FieldPhonenumber holds the string denoting the phonenumber field in the database.
	FieldPhonenumber = "phonenumber"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldHome holds the string denoting the home field in the database.
	FieldHome = "home"
	// FieldDate holds the string denoting the date field in the database.
	FieldDate = "date"

	// EdgeEdgesOfGender holds the string denoting the edgesofgender edge name in mutations.
	EdgeEdgesOfGender = "EdgesOfGender"
	// EdgeEdgesOfBloodtype holds the string denoting the edgesofbloodtype edge name in mutations.
	EdgeEdgesOfBloodtype = "EdgesOfBloodtype"
	// EdgeEdgesOfMedicalrecordstaff holds the string denoting the edgesofmedicalrecordstaff edge name in mutations.
	EdgeEdgesOfMedicalrecordstaff = "EdgesOfMedicalrecordstaff"
	// EdgeEdgesOfPrename holds the string denoting the edgesofprename edge name in mutations.
	EdgeEdgesOfPrename = "EdgesOfPrename"
	// EdgeEdgesOfHistorytaking holds the string denoting the edgesofhistorytaking edge name in mutations.
	EdgeEdgesOfHistorytaking = "EdgesOfHistorytaking"
	// EdgeEdgesOfTreatment holds the string denoting the edgesoftreatment edge name in mutations.
	EdgeEdgesOfTreatment = "EdgesOfTreatment"
	// EdgeEdgesOfPatientrecordPatientrights holds the string denoting the edgesofpatientrecordpatientrights edge name in mutations.
	EdgeEdgesOfPatientrecordPatientrights = "EdgesOfPatientrecordPatientrights"

	// Table holds the table name of the patientrecord in the database.
	Table = "patientrecords"
	// EdgesOfGenderTable is the table the holds the EdgesOfGender relation/edge.
	EdgesOfGenderTable = "patientrecords"
	// EdgesOfGenderInverseTable is the table name for the Gender entity.
	// It exists in this package in order to avoid circular dependency with the "gender" package.
	EdgesOfGenderInverseTable = "genders"
	// EdgesOfGenderColumn is the table column denoting the EdgesOfGender relation/edge.
	EdgesOfGenderColumn = "gender_id"
	// EdgesOfBloodtypeTable is the table the holds the EdgesOfBloodtype relation/edge.
	EdgesOfBloodtypeTable = "patientrecords"
	// EdgesOfBloodtypeInverseTable is the table name for the Bloodtype entity.
	// It exists in this package in order to avoid circular dependency with the "bloodtype" package.
	EdgesOfBloodtypeInverseTable = "bloodtypes"
	// EdgesOfBloodtypeColumn is the table column denoting the EdgesOfBloodtype relation/edge.
	EdgesOfBloodtypeColumn = "bloodtype_id"
	// EdgesOfMedicalrecordstaffTable is the table the holds the EdgesOfMedicalrecordstaff relation/edge.
	EdgesOfMedicalrecordstaffTable = "patientrecords"
	// EdgesOfMedicalrecordstaffInverseTable is the table name for the Medicalrecordstaff entity.
	// It exists in this package in order to avoid circular dependency with the "medicalrecordstaff" package.
	EdgesOfMedicalrecordstaffInverseTable = "medicalrecordstaffs"
	// EdgesOfMedicalrecordstaffColumn is the table column denoting the EdgesOfMedicalrecordstaff relation/edge.
	EdgesOfMedicalrecordstaffColumn = "medicalrecordstaff_id"
	// EdgesOfPrenameTable is the table the holds the EdgesOfPrename relation/edge.
	EdgesOfPrenameTable = "patientrecords"
	// EdgesOfPrenameInverseTable is the table name for the Prename entity.
	// It exists in this package in order to avoid circular dependency with the "prename" package.
	EdgesOfPrenameInverseTable = "prenames"
	// EdgesOfPrenameColumn is the table column denoting the EdgesOfPrename relation/edge.
	EdgesOfPrenameColumn = "prefix_id"
	// EdgesOfHistorytakingTable is the table the holds the EdgesOfHistorytaking relation/edge.
	EdgesOfHistorytakingTable = "historytakings"
	// EdgesOfHistorytakingInverseTable is the table name for the Historytaking entity.
	// It exists in this package in order to avoid circular dependency with the "historytaking" package.
	EdgesOfHistorytakingInverseTable = "historytakings"
	// EdgesOfHistorytakingColumn is the table column denoting the EdgesOfHistorytaking relation/edge.
	EdgesOfHistorytakingColumn = "patientrecord_id"
	// EdgesOfTreatmentTable is the table the holds the EdgesOfTreatment relation/edge.
	EdgesOfTreatmentTable = "treatments"
	// EdgesOfTreatmentInverseTable is the table name for the Treatment entity.
	// It exists in this package in order to avoid circular dependency with the "treatment" package.
	EdgesOfTreatmentInverseTable = "treatments"
	// EdgesOfTreatmentColumn is the table column denoting the EdgesOfTreatment relation/edge.
	EdgesOfTreatmentColumn = "patientrecord_id"
	// EdgesOfPatientrecordPatientrightsTable is the table the holds the EdgesOfPatientrecordPatientrights relation/edge.
	EdgesOfPatientrecordPatientrightsTable = "patientrights"
	// EdgesOfPatientrecordPatientrightsInverseTable is the table name for the Patientrights entity.
	// It exists in this package in order to avoid circular dependency with the "patientrights" package.
	EdgesOfPatientrecordPatientrightsInverseTable = "patientrights"
	// EdgesOfPatientrecordPatientrightsColumn is the table column denoting the EdgesOfPatientrecordPatientrights relation/edge.
	EdgesOfPatientrecordPatientrightsColumn = "patientrecord_id"
)

// Columns holds all SQL columns for patientrecord fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldIdcardnumber,
	FieldAge,
	FieldDisease,
	FieldAllergic,
	FieldPhonenumber,
	FieldEmail,
	FieldHome,
	FieldDate,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Patientrecord type.
var ForeignKeys = []string{
	"bloodtype_id",
	"gender_id",
	"medicalrecordstaff_id",
	"prefix_id",
}

var (
	// NameValidator is a validator for the "Name" field. It is called by the builders before save.
	NameValidator func(string) error
	// IdcardnumberValidator is a validator for the "Idcardnumber" field. It is called by the builders before save.
	IdcardnumberValidator func(string) error
	// AgeValidator is a validator for the "Age" field. It is called by the builders before save.
	AgeValidator func(int) error
	// DiseaseValidator is a validator for the "Disease" field. It is called by the builders before save.
	DiseaseValidator func(string) error
	// AllergicValidator is a validator for the "Allergic" field. It is called by the builders before save.
	AllergicValidator func(string) error
	// PhonenumberValidator is a validator for the "Phonenumber" field. It is called by the builders before save.
	PhonenumberValidator func(string) error
	// EmailValidator is a validator for the "Email" field. It is called by the builders before save.
	EmailValidator func(string) error
	// HomeValidator is a validator for the "Home" field. It is called by the builders before save.
	HomeValidator func(string) error
)
