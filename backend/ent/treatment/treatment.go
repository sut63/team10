// Code generated by entc, DO NOT EDIT.

package treatment

const (
	// Label holds the string label denoting the treatment type in the database.
	Label = "treatment"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSymptom holds the string denoting the symptom field in the database.
	FieldSymptom = "symptom"
	// FieldTreat holds the string denoting the treat field in the database.
	FieldTreat = "treat"
	// FieldMedicine holds the string denoting the medicine field in the database.
	FieldMedicine = "medicine"
	// FieldDatetreat holds the string denoting the datetreat field in the database.
	FieldDatetreat = "datetreat"

	// EdgeEdgesOfTypetreatment holds the string denoting the edgesoftypetreatment edge name in mutations.
	EdgeEdgesOfTypetreatment = "EdgesOfTypetreatment"
	// EdgeEdgesOfPatientrecord holds the string denoting the edgesofpatientrecord edge name in mutations.
	EdgeEdgesOfPatientrecord = "EdgesOfPatientrecord"
	// EdgeEdgesOfDoctor holds the string denoting the edgesofdoctor edge name in mutations.
	EdgeEdgesOfDoctor = "EdgesOfDoctor"
	// EdgeEdgesOfUnpaybills holds the string denoting the edgesofunpaybills edge name in mutations.
	EdgeEdgesOfUnpaybills = "EdgesOfUnpaybills"

	// Table holds the table name of the treatment in the database.
	Table = "treatments"
	// EdgesOfTypetreatmentTable is the table the holds the EdgesOfTypetreatment relation/edge.
	EdgesOfTypetreatmentTable = "treatments"
	// EdgesOfTypetreatmentInverseTable is the table name for the Typetreatment entity.
	// It exists in this package in order to avoid circular dependency with the "typetreatment" package.
	EdgesOfTypetreatmentInverseTable = "typetreatments"
	// EdgesOfTypetreatmentColumn is the table column denoting the EdgesOfTypetreatment relation/edge.
	EdgesOfTypetreatmentColumn = "typetreatment_id"
	// EdgesOfPatientrecordTable is the table the holds the EdgesOfPatientrecord relation/edge.
	EdgesOfPatientrecordTable = "treatments"
	// EdgesOfPatientrecordInverseTable is the table name for the Patientrecord entity.
	// It exists in this package in order to avoid circular dependency with the "patientrecord" package.
	EdgesOfPatientrecordInverseTable = "patientrecords"
	// EdgesOfPatientrecordColumn is the table column denoting the EdgesOfPatientrecord relation/edge.
	EdgesOfPatientrecordColumn = "patientrecord_id"
	// EdgesOfDoctorTable is the table the holds the EdgesOfDoctor relation/edge.
	EdgesOfDoctorTable = "treatments"
	// EdgesOfDoctorInverseTable is the table name for the Doctor entity.
	// It exists in this package in order to avoid circular dependency with the "doctor" package.
	EdgesOfDoctorInverseTable = "doctors"
	// EdgesOfDoctorColumn is the table column denoting the EdgesOfDoctor relation/edge.
	EdgesOfDoctorColumn = "doctor_id"
	// EdgesOfUnpaybillsTable is the table the holds the EdgesOfUnpaybills relation/edge.
	EdgesOfUnpaybillsTable = "unpaybills"
	// EdgesOfUnpaybillsInverseTable is the table name for the Unpaybill entity.
	// It exists in this package in order to avoid circular dependency with the "unpaybill" package.
	EdgesOfUnpaybillsInverseTable = "unpaybills"
	// EdgesOfUnpaybillsColumn is the table column denoting the EdgesOfUnpaybills relation/edge.
	EdgesOfUnpaybillsColumn = "treatment_id"
)

// Columns holds all SQL columns for treatment fields.
var Columns = []string{
	FieldID,
	FieldSymptom,
	FieldTreat,
	FieldMedicine,
	FieldDatetreat,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Treatment type.
var ForeignKeys = []string{
	"doctor_id",
	"patientrecord_id",
	"typetreatment_id",
}

var (
	// SymptomValidator is a validator for the "Symptom" field. It is called by the builders before save.
	SymptomValidator func(string) error
	// TreatValidator is a validator for the "Treat" field. It is called by the builders before save.
	TreatValidator func(string) error
	// MedicineValidator is a validator for the "Medicine" field. It is called by the builders before save.
	MedicineValidator func(string) error
)
