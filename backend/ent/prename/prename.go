// Code generated by entc, DO NOT EDIT.

package prename

const (
	// Label holds the string label denoting the prename type in the database.
	Label = "prename"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPrefix holds the string denoting the prefix field in the database.
	FieldPrefix = "prefix"

	// EdgePrename2doctorinfo holds the string denoting the prename2doctorinfo edge name in mutations.
	EdgePrename2doctorinfo = "prename2doctorinfo"
	// EdgePatientrecord holds the string denoting the patientrecord edge name in mutations.
	EdgePatientrecord = "patientrecord"

	// Table holds the table name of the prename in the database.
	Table = "prenames"
	// Prename2doctorinfoTable is the table the holds the prename2doctorinfo relation/edge.
	Prename2doctorinfoTable = "doctorinfos"
	// Prename2doctorinfoInverseTable is the table name for the Doctorinfo entity.
	// It exists in this package in order to avoid circular dependency with the "doctorinfo" package.
	Prename2doctorinfoInverseTable = "doctorinfos"
	// Prename2doctorinfoColumn is the table column denoting the prename2doctorinfo relation/edge.
	Prename2doctorinfoColumn = "prefix"
	// PatientrecordTable is the table the holds the patientrecord relation/edge.
	PatientrecordTable = "patientrecords"
	// PatientrecordInverseTable is the table name for the Patientrecord entity.
	// It exists in this package in order to avoid circular dependency with the "patientrecord" package.
	PatientrecordInverseTable = "patientrecords"
	// PatientrecordColumn is the table column denoting the patientrecord relation/edge.
	PatientrecordColumn = "prefix"
)

// Columns holds all SQL columns for prename fields.
var Columns = []string{
	FieldID,
	FieldPrefix,
}

var (
	// PrefixValidator is a validator for the "prefix" field. It is called by the builders before save.
	PrefixValidator func(string) error
)
