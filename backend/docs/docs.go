// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/Gender/{id}": {
            "get": {
                "description": "get gender by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a gender entity by ID",
                "operationId": "get-gender",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gender ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Gender"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/Insurances": {
            "post": {
                "description": "Create Insurance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Insurance",
                "operationId": "create-Insurance",
                "parameters": [
                    {
                        "description": "Insurance entity",
                        "name": "Insurance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Insurance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Insurance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/Medicalrecordstaff/{id}": {
            "get": {
                "description": "get medicalrecordstaff by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a medicalrecordstaff entity by ID",
                "operationId": "get-medicalrecordstaff",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Medicalrecordstaff ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Medicalrecordstaff"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/abilitypatientrightss": {
            "get": {
                "description": "list abilitypatientrights entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List abilitypatientrights entities",
                "operationId": "list-abilitypatientrights",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Abilitypatientrights"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create abilitypatientrights",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create abilitypatientrights",
                "operationId": "create-abilitypatientrights",
                "parameters": [
                    {
                        "description": "Abilitypatientrights entity",
                        "name": "abilitypatientrights",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Abilitypatientrights"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Abilitypatientrights"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/abilitypatientrightss/{id}": {
            "get": {
                "description": "get abilitypatientrights by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a abilitypatientrights entity by ID",
                "operationId": "get-abilitypatientrights",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Abilitypatientrights ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Abilitypatientrights"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update abilitypatientrights by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a abilitypatientrights entity by ID",
                "operationId": "update-abilitypatientrights",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Abilitypatientrights ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Abilitypatientrights entity",
                        "name": "abilitypatientrights",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Abilitypatientrights"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Abilitypatientrights"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get abilitypatientrights by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a abilitypatientrights entity by ID",
                "operationId": "delete-abilitypatientrights",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Abilitypatientrights ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/bills": {
            "get": {
                "description": "list bill entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List bill entities",
                "operationId": "list-bill",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Bill"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create bill",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create bill",
                "operationId": "create-bill",
                "parameters": [
                    {
                        "description": "Bill entity",
                        "name": "bill",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Bill"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Bill"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/bills/{id}": {
            "get": {
                "description": "get bill by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a bill entity by ID",
                "operationId": "get-bill",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bill ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Bill"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get bill by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a bill entity by ID",
                "operationId": "delete-bill",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bill ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/department": {
            "get": {
                "description": "list department entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List department entities",
                "operationId": "list-department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Department"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create department",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create department",
                "operationId": "create-department",
                "parameters": [
                    {
                        "description": "Department entity",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Department"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Department"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/department/{id}": {
            "get": {
                "description": "get department by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a department entity by ID",
                "operationId": "get-department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Department"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update department by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a department entity by ID",
                "operationId": "update-department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Department entity",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Department"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Department"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get department by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a department entity by ID",
                "operationId": "delete-department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/financier": {
            "get": {
                "description": "list financier entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List financier entities",
                "operationId": "list-financier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Financier"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/financier/{id}": {
            "get": {
                "description": "get financier by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a financier entity by ID",
                "operationId": "get-financier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Financier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Financier"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/gender": {
            "get": {
                "description": "list gender entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List gender entities",
                "operationId": "list-gender",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Gender"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/historytaking": {
            "get": {
                "description": "list historytaking entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List historytaking entities",
                "operationId": "list-historytaking",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Historytaking"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create historytaking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create historytaking",
                "operationId": "create-historytaking",
                "parameters": [
                    {
                        "description": "Historytaking entity",
                        "name": "historytaking",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Historytaking"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Historytaking"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/historytaking/{id}": {
            "get": {
                "description": "get historytaking by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a historytaking entity by ID",
                "operationId": "get-historytaking",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Historytaking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Historytaking"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/insurances": {
            "get": {
                "description": "list insurance entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List insurance entities",
                "operationId": "list-insurance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Insurance"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/insurances/{id}": {
            "get": {
                "description": "get Insurance by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a Insurance entity by ID",
                "operationId": "get-insurance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Insurance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Insurance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update insurance by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a insurance entity by ID",
                "operationId": "update-insurance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Insurance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Insurance entity",
                        "name": "insurance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Insurance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Insurance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/medicalrecordstaff": {
            "get": {
                "description": "list medicalrecordstaff entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List medicalrecordstaff entities",
                "operationId": "list-medicalrecordstaff",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Medicalrecordstaff"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/nurse": {
            "get": {
                "description": "list nurse entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List nurse entities",
                "operationId": "list-nurse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Nurse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create nurse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create nurse",
                "operationId": "create-nurse",
                "parameters": [
                    {
                        "description": "Nurse entity",
                        "name": "nurse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Nurse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Nurse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/nurse/{id}": {
            "get": {
                "description": "get nurse by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a nurse entity by ID",
                "operationId": "get-nurse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Nurse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Nurse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update nurse by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a nurse entity by ID",
                "operationId": "update-nurse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Nurse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Nurse entity",
                        "name": "nurse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Nurse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Nurse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get nurse by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a nurse entity by ID",
                "operationId": "delete-nurse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Nurse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/patientrecord": {
            "get": {
                "description": "list patientrecord entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List patientrecord entities",
                "operationId": "list-patientrecord",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Patientrecord"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create patientrecord",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create patientrecord",
                "operationId": "create-patientrecord",
                "parameters": [
                    {
                        "description": "Patientrecord entity",
                        "name": "patientrecord",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Patientrecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Patientrecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/patientrecord/{id}": {
            "get": {
                "description": "get patientrecord by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a patientrecord entity by ID",
                "operationId": "get-patientrecord",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Patientrecord ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Patientrecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/patientrightss": {
            "get": {
                "description": "list patientrights entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List patientrights entities",
                "operationId": "list-patientrights",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Patientrights"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Patientrights",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Patientrights",
                "operationId": "create-Patientrights",
                "parameters": [
                    {
                        "description": "Patientrights entity",
                        "name": "Patientrights",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Patientrights"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Patientrights"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/patientrightss/{id}": {
            "get": {
                "description": "get Patientrights by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a Patientrights entity by ID",
                "operationId": "get-patientrights",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Patientrights ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Patientrights"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update patientrights by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a patientrights entity by ID",
                "operationId": "update-patientrights",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Patientrights ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Patientrights entity",
                        "name": "patientrights",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Patientrights"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Patientrights"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get patientrights by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a patientrights entity by ID",
                "operationId": "delete-patientrights",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Patientrights ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/patientrightstypes": {
            "get": {
                "description": "list patientrightstype entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List patientrightstype entities",
                "operationId": "list-patientrightstype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Patientrightstype"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create patientrightstype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create patientrightstype",
                "operationId": "create-patientrightstype",
                "parameters": [
                    {
                        "description": "Patientrightstype entity",
                        "name": "patientrightstype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Patientrightstype"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Patientrightstype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/patientrightstypes/{id}": {
            "get": {
                "description": "get patientrightstype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a patientrightstype entity by ID",
                "operationId": "get-patientrightstype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Patientrightstype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Patientrightstype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update patientrightstype by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a patientrightstype entity by ID",
                "operationId": "update-patientrightstype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Patientrightstype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Patientrightstype entity",
                        "name": "patientrightstype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Patientrightstype"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Patientrightstype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get patientrightstype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a patientrightstype entity by ID",
                "operationId": "delete-patientrightstype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Patientrightstype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/paytype": {
            "get": {
                "description": "list paytype entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List paytype entities",
                "operationId": "list-paytype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Paytype"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/symptomseverity": {
            "get": {
                "description": "list symptomseverity entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List symptomseverity entities",
                "operationId": "list-symptomseverity",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Symptomseverity"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create symptomseverity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create symptomseverity",
                "operationId": "create-symptomseverity",
                "parameters": [
                    {
                        "description": "Symptomseverity entity",
                        "name": "symptomseverity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Symptomseverity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Symptomseverity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/symptomseverity/{id}": {
            "get": {
                "description": "get symptomseverity by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a symptomseverity entity by ID",
                "operationId": "get-symptomseverity",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Symptomseverity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Symptomseverity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update symptomseverity by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a symptomseverity entity by ID",
                "operationId": "update-symptomseverity",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Symptomseverity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Symptomseverity entity",
                        "name": "symptomseverity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Symptomseverity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Symptomseverity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get symptomseverity by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a symptomseverity entity by ID",
                "operationId": "delete-symptomseverity",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Symptomseverity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/unpaybills": {
            "get": {
                "description": "list unpaybill entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List unpaybill entities",
                "operationId": "list-unpaybill",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Unpaybill"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create unpaybill",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create unpaybill",
                "operationId": "create-unpaybill",
                "parameters": [
                    {
                        "description": "Unpaybill entity",
                        "name": "unpaybill",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Unpaybill"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Unpaybill"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/unpaybills/{id}": {
            "get": {
                "description": "get unpaybill by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a unpaybill entity by ID",
                "operationId": "get-unpaybill",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Unpaybill ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Unpaybill"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update unpaybill by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a unpaybill entity by ID",
                "operationId": "update-unpaybill",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Unpaybill ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Unpaybill entity",
                        "name": "unpaybill",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Unpaybill"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Unpaybill"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get unpaybill by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a unpaybill entity by ID",
                "operationId": "delete-unpaybill",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Unpaybill ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "list user entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List user entities",
                "operationId": "list-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create user",
                "operationId": "create-user",
                "parameters": [
                    {
                        "description": "User entity",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "get user by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a user entity by ID",
                "operationId": "get-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a user entity by ID",
                "operationId": "update-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User entity",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get user by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a user entity by ID",
                "operationId": "delete-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.Historytaking": {
            "type": "object",
            "properties": {
                "bp": {
                    "type": "integer"
                },
                "datetime": {
                    "type": "string"
                },
                "department": {
                    "type": "integer"
                },
                "hight": {
                    "type": "number"
                },
                "nurse": {
                    "type": "integer"
                },
                "oxygen": {
                    "type": "string"
                },
                "patientrecord": {
                    "type": "integer"
                },
                "pulse": {
                    "type": "integer"
                },
                "respiration": {
                    "type": "integer"
                },
                "symptom": {
                    "type": "string"
                },
                "symptomseverity": {
                    "type": "integer"
                },
                "temp": {
                    "type": "number"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "controllers.Patientrecord": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "allergic": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string"
                },
                "bloodtype": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "disease": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "home": {
                    "type": "string"
                },
                "idcardnumber": {
                    "type": "integer"
                },
                "medicalrecordstaff": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phonenumber": {
                    "type": "integer"
                },
                "prename": {
                    "type": "integer"
                }
            }
        },
        "controllers.Patientrights": {
            "type": "object",
            "properties": {
                "insurance": {
                    "type": "integer"
                },
                "medicalrecordstaff": {
                    "type": "integer"
                },
                "patientrecord": {
                    "type": "integer"
                },
                "patientrightstype": {
                    "description": "Abilitypatientrights int",
                    "type": "integer"
                }
            }
        },
        "ent.Abilitypatientrights": {
            "type": "object",
            "properties": {
                "Examine": {
                    "description": "Examine holds the value of the \"Examine\" field.",
                    "type": "string"
                },
                "MedicalSupplies": {
                    "description": "MedicalSupplies holds the value of the \"MedicalSupplies\" field.",
                    "type": "string"
                },
                "Operative": {
                    "description": "Operative holds the value of the \"Operative\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the AbilitypatientrightsQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.AbilitypatientrightsEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.AbilitypatientrightsEdges": {
            "type": "object",
            "properties": {
                "abilitypatientrightsPatientrightstype": {
                    "description": "AbilitypatientrightsPatientrightstype holds the value of the AbilitypatientrightsPatientrightstype edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Patientrightstype"
                    }
                }
            }
        },
        "ent.Bill": {
            "type": "object",
            "properties": {
                "Amount": {
                    "description": "Amount holds the value of the \"Amount\" field.",
                    "type": "string"
                },
                "Date": {
                    "description": "Date holds the value of the \"Date\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the BillQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.BillEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.BillEdges": {
            "type": "object",
            "properties": {
                "officer": {
                    "description": "Officer holds the value of the officer edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Financier"
                },
                "paytype": {
                    "description": "Paytype holds the value of the paytype edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Paytype"
                },
                "treatment": {
                    "description": "Treatment holds the value of the treatment edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Unpaybill"
                }
            }
        },
        "ent.Department": {
            "type": "object",
            "properties": {
                "department": {
                    "description": "Department holds the value of the \"department\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DepartmentQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DepartmentEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.DepartmentEdges": {
            "type": "object",
            "properties": {
                "department2doctorinfo": {
                    "description": "Department2doctorinfo holds the value of the department2doctorinfo edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Doctorinfo"
                    }
                },
                "historytaking": {
                    "description": "Historytaking holds the value of the historytaking edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Historytaking"
                    }
                }
            }
        },
        "ent.Doctorinfo": {
            "type": "object",
            "properties": {
                "doctorname": {
                    "description": "Doctorname holds the value of the \"doctorname\" field.",
                    "type": "string"
                },
                "doctorsurname": {
                    "description": "Doctorsurname holds the value of the \"doctorsurname\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DoctorinfoQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DoctorinfoEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "licensenumber": {
                    "description": "Licensenumber holds the value of the \"licensenumber\" field.",
                    "type": "string"
                },
                "telephonenumber": {
                    "description": "Telephonenumber holds the value of the \"telephonenumber\" field.",
                    "type": "string"
                }
            }
        },
        "ent.DoctorinfoEdges": {
            "type": "object",
            "properties": {
                "department": {
                    "description": "Department holds the value of the department edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Department"
                },
                "educationlevel": {
                    "description": "Educationlevel holds the value of the educationlevel edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Educationlevel"
                },
                "officeroom": {
                    "description": "Officeroom holds the value of the officeroom edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Officeroom"
                },
                "prename": {
                    "description": "Prename holds the value of the prename edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Prename"
                },
                "treatment": {
                    "description": "Treatment holds the value of the treatment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Treatment"
                    }
                },
                "user": {
                    "description": "User holds the value of the user edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.Educationlevel": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the EducationlevelQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.EducationlevelEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "level": {
                    "description": "Level holds the value of the \"level\" field.",
                    "type": "string"
                }
            }
        },
        "ent.EducationlevelEdges": {
            "type": "object",
            "properties": {
                "educationlevel2doctorinfo": {
                    "description": "Educationlevel2doctorinfo holds the value of the educationlevel2doctorinfo edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Doctorinfo"
                    }
                }
            }
        },
        "ent.Financier": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the FinancierQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.FinancierEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.FinancierEdges": {
            "type": "object",
            "properties": {
                "bills": {
                    "description": "Bills holds the value of the bills edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Bill"
                    }
                },
                "user": {
                    "description": "User holds the value of the user edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.Gender": {
            "type": "object",
            "properties": {
                "Genderstatus": {
                    "description": "Genderstatus holds the value of the \"Genderstatus\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the GenderQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.GenderEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.GenderEdges": {
            "type": "object",
            "properties": {
                "patientrecord": {
                    "description": "Patientrecord holds the value of the patientrecord edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Patientrecord"
                    }
                }
            }
        },
        "ent.Historytaking": {
            "type": "object",
            "properties": {
                "bp": {
                    "description": "Bp holds the value of the \"bp\" field.",
                    "type": "integer"
                },
                "datetime": {
                    "description": "Datetime holds the value of the \"datetime\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the HistorytakingQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.HistorytakingEdges"
                },
                "hight": {
                    "description": "Hight holds the value of the \"hight\" field.",
                    "type": "number"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "oxygen": {
                    "description": "Oxygen holds the value of the \"oxygen\" field.",
                    "type": "string"
                },
                "pulse": {
                    "description": "Pulse holds the value of the \"pulse\" field.",
                    "type": "integer"
                },
                "respiration": {
                    "description": "Respiration holds the value of the \"respiration\" field.",
                    "type": "integer"
                },
                "symptom": {
                    "description": "Symptom holds the value of the \"symptom\" field.",
                    "type": "string"
                },
                "temp": {
                    "description": "Temp holds the value of the \"temp\" field.",
                    "type": "number"
                },
                "weight": {
                    "description": "Weight holds the value of the \"weight\" field.",
                    "type": "number"
                }
            }
        },
        "ent.HistorytakingEdges": {
            "type": "object",
            "properties": {
                "department": {
                    "description": "Department holds the value of the department edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Department"
                },
                "nurse": {
                    "description": "Nurse holds the value of the nurse edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Nurse"
                },
                "patientrecord": {
                    "description": "Patientrecord holds the value of the patientrecord edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Patientrecord"
                },
                "symptomseverity": {
                    "description": "Symptomseverity holds the value of the symptomseverity edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Symptomseverity"
                }
            }
        },
        "ent.Insurance": {
            "type": "object",
            "properties": {
                "Insurancecompany": {
                    "description": "Insurancecompany holds the value of the \"Insurancecompany\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the InsuranceQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.InsuranceEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.InsuranceEdges": {
            "type": "object",
            "properties": {
                "insurancePatientrights": {
                    "description": "InsurancePatientrights holds the value of the InsurancePatientrights edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Patientrights"
                    }
                }
            }
        },
        "ent.Medicalrecordstaff": {
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name holds the value of the \"Name\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the MedicalrecordstaffQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.MedicalrecordstaffEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.MedicalrecordstaffEdges": {
            "type": "object",
            "properties": {
                "medicalrecordstaffPatientrights": {
                    "description": "MedicalrecordstaffPatientrights holds the value of the MedicalrecordstaffPatientrights edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Patientrights"
                    }
                },
                "patientrecord": {
                    "description": "Patientrecord holds the value of the patientrecord edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Patientrecord"
                    }
                },
                "user": {
                    "description": "User holds the value of the user edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.Nurse": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the NurseQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.NurseEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "nursinglicense": {
                    "description": "Nursinglicense holds the value of the \"nursinglicense\" field.",
                    "type": "string"
                },
                "position": {
                    "description": "Position holds the value of the \"position\" field.",
                    "type": "string"
                }
            }
        },
        "ent.NurseEdges": {
            "type": "object",
            "properties": {
                "historytaking": {
                    "description": "Historytaking holds the value of the historytaking edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Historytaking"
                    }
                },
                "user": {
                    "description": "User holds the value of the user edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.Officeroom": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the OfficeroomQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.OfficeroomEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "roomnumber": {
                    "description": "Roomnumber holds the value of the \"roomnumber\" field.",
                    "type": "integer"
                }
            }
        },
        "ent.OfficeroomEdges": {
            "type": "object",
            "properties": {
                "officeroom2doctorinfo": {
                    "description": "Officeroom2doctorinfo holds the value of the officeroom2doctorinfo edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Doctorinfo"
                    }
                }
            }
        },
        "ent.Patientrecord": {
            "type": "object",
            "properties": {
                "Age": {
                    "description": "Age holds the value of the \"Age\" field.",
                    "type": "integer"
                },
                "Allergic": {
                    "description": "Allergic holds the value of the \"Allergic\" field.",
                    "type": "string"
                },
                "Birthday": {
                    "description": "Birthday holds the value of the \"Birthday\" field.",
                    "type": "string"
                },
                "Bloodtype": {
                    "description": "Bloodtype holds the value of the \"Bloodtype\" field.",
                    "type": "string"
                },
                "Date": {
                    "description": "Date holds the value of the \"Date\" field.",
                    "type": "string"
                },
                "Disease": {
                    "description": "Disease holds the value of the \"Disease\" field.",
                    "type": "string"
                },
                "Email": {
                    "description": "Email holds the value of the \"Email\" field.",
                    "type": "string"
                },
                "Home": {
                    "description": "Home holds the value of the \"Home\" field.",
                    "type": "string"
                },
                "Idcardnumber": {
                    "description": "Idcardnumber holds the value of the \"Idcardnumber\" field.",
                    "type": "integer"
                },
                "Name": {
                    "description": "Name holds the value of the \"Name\" field.",
                    "type": "string"
                },
                "Phonenumber": {
                    "description": "Phonenumber holds the value of the \"Phonenumber\" field.",
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PatientrecordQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PatientrecordEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.PatientrecordEdges": {
            "type": "object",
            "properties": {
                "gender": {
                    "description": "Gender holds the value of the gender edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Gender"
                },
                "historytaking": {
                    "description": "Historytaking holds the value of the historytaking edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Historytaking"
                    }
                },
                "medicalrecordstaff": {
                    "description": "Medicalrecordstaff holds the value of the medicalrecordstaff edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Medicalrecordstaff"
                },
                "patientrecordPatientrights": {
                    "description": "PatientrecordPatientrights holds the value of the PatientrecordPatientrights edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Patientrights"
                    }
                },
                "prename": {
                    "description": "Prename holds the value of the prename edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Prename"
                },
                "treatment": {
                    "description": "Treatment holds the value of the treatment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Treatment"
                    }
                }
            }
        },
        "ent.Patientrights": {
            "type": "object",
            "properties": {
                "PermissionDate": {
                    "description": "PermissionDate holds the value of the \"PermissionDate\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PatientrightsQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PatientrightsEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "insurance_id": {
                    "type": "integer"
                },
                "patientrightstype_id": {
                    "type": "integer"
                }
            }
        },
        "ent.PatientrightsEdges": {
            "type": "object",
            "properties": {
                "patientrightsInsurance": {
                    "description": "PatientrightsInsurance holds the value of the PatientrightsInsurance edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Insurance"
                },
                "patientrightsMedicalrecordstaff": {
                    "description": "PatientrightsMedicalrecordstaff holds the value of the PatientrightsMedicalrecordstaff edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Medicalrecordstaff"
                },
                "patientrightsPatientrecord": {
                    "description": "PatientrightsPatientrecord holds the value of the PatientrightsPatientrecord edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Patientrecord"
                },
                "patientrightsPatientrightstype": {
                    "description": "PatientrightsPatientrightstype holds the value of the PatientrightsPatientrightstype edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Patientrightstype"
                }
            }
        },
        "ent.Patientrightstype": {
            "type": "object",
            "properties": {
                "Permission": {
                    "description": "Permission holds the value of the \"Permission\" field.",
                    "type": "string"
                },
                "PermissionArea": {
                    "description": "PermissionArea holds the value of the \"PermissionArea\" field.",
                    "type": "string"
                },
                "Responsible": {
                    "description": "Responsible holds the value of the \"Responsible\" field.",
                    "type": "string"
                },
                "abilitypatientrights_id": {
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PatientrightstypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PatientrightstypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.PatientrightstypeEdges": {
            "type": "object",
            "properties": {
                "patientrightstypeAbilitypatientrights": {
                    "description": "PatientrightstypeAbilitypatientrights holds the value of the PatientrightstypeAbilitypatientrights edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Abilitypatientrights"
                },
                "patientrightstypePatientrights": {
                    "description": "PatientrightstypePatientrights holds the value of the PatientrightstypePatientrights edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Patientrights"
                    }
                }
            }
        },
        "ent.Paytype": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PaytypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PaytypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "paytype": {
                    "description": "Paytype holds the value of the \"paytype\" field.",
                    "type": "string"
                }
            }
        },
        "ent.PaytypeEdges": {
            "type": "object",
            "properties": {
                "bills": {
                    "description": "Bills holds the value of the bills edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Bill"
                    }
                }
            }
        },
        "ent.Prename": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PrenameQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PrenameEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "prefix": {
                    "description": "Prefix holds the value of the \"prefix\" field.",
                    "type": "string"
                }
            }
        },
        "ent.PrenameEdges": {
            "type": "object",
            "properties": {
                "patientrecord": {
                    "description": "Patientrecord holds the value of the patientrecord edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Patientrecord"
                    }
                },
                "prename2doctorinfo": {
                    "description": "Prename2doctorinfo holds the value of the prename2doctorinfo edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Doctorinfo"
                    }
                }
            }
        },
        "ent.Symptomseverity": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the SymptomseverityQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.SymptomseverityEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "symptomseverity": {
                    "description": "Symptomseverity holds the value of the \"symptomseverity\" field.",
                    "type": "string"
                }
            }
        },
        "ent.SymptomseverityEdges": {
            "type": "object",
            "properties": {
                "historytaking": {
                    "description": "Historytaking holds the value of the historytaking edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Historytaking"
                    }
                }
            }
        },
        "ent.Treatment": {
            "type": "object",
            "properties": {
                "datetime": {
                    "description": "Datetime holds the value of the \"datetime\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the TreatmentQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.TreatmentEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "treatment": {
                    "description": "Treatment holds the value of the \"treatment\" field.",
                    "type": "string"
                }
            }
        },
        "ent.TreatmentEdges": {
            "type": "object",
            "properties": {
                "doctorinfo": {
                    "description": "Doctorinfo holds the value of the doctorinfo edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Doctorinfo"
                },
                "patientrecord": {
                    "description": "Patientrecord holds the value of the patientrecord edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Patientrecord"
                },
                "typetreatment": {
                    "description": "Typetreatment holds the value of the typetreatment edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Typetreatment"
                },
                "unpaybills": {
                    "description": "Unpaybills holds the value of the unpaybills edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Unpaybill"
                }
            }
        },
        "ent.Typetreatment": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the TypetreatmentQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.TypetreatmentEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "type": {
                    "description": "Type holds the value of the \"type\" field.",
                    "type": "string"
                }
            }
        },
        "ent.TypetreatmentEdges": {
            "type": "object",
            "properties": {
                "treatment": {
                    "description": "Treatment holds the value of the treatment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Treatment"
                    }
                }
            }
        },
        "ent.Unpaybill": {
            "type": "object",
            "properties": {
                "Status": {
                    "description": "Status holds the value of the \"Status\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the UnpaybillQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.UnpaybillEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.UnpaybillEdges": {
            "type": "object",
            "properties": {
                "bills": {
                    "description": "Bills holds the value of the bills edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Bill"
                },
                "treatment": {
                    "description": "Treatment holds the value of the treatment edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Treatment"
                }
            }
        },
        "ent.User": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the UserQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.UserEdges"
                },
                "email": {
                    "description": "Email holds the value of the \"email\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "password": {
                    "description": "Password holds the value of the \"password\" field.",
                    "type": "string"
                }
            }
        },
        "ent.UserEdges": {
            "type": "object",
            "properties": {
                "financier": {
                    "description": "Financier holds the value of the financier edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Financier"
                },
                "historytaking": {
                    "description": "Historytaking holds the value of the historytaking edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Nurse"
                },
                "medicalrecordstaff": {
                    "description": "Medicalrecordstaff holds the value of the medicalrecordstaff edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Medicalrecordstaff"
                },
                "user2doctorinfo": {
                    "description": "User2doctorinfo holds the value of the user2doctorinfo edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Doctorinfo"
                },
                "userPatientrights": {
                    "description": "UserPatientrights holds the value of the UserPatientrights edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Patientrights"
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "SUT SA Example API",
	Description: "This is a sample server for SUT SE 2563",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
