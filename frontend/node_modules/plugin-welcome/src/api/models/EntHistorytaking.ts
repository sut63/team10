/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntHistorytakingEdges,
    EntHistorytakingEdgesFromJSON,
    EntHistorytakingEdgesFromJSONTyped,
    EntHistorytakingEdgesToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntHistorytaking
 */
export interface EntHistorytaking {
    /**
     * Bp holds the value of the "bp" field.
     * @type {number}
     * @memberof EntHistorytaking
     */
    bp?: number;
    /**
     * Datetime holds the value of the "datetime" field.
     * @type {string}
     * @memberof EntHistorytaking
     */
    datetime?: string;
    /**
     * 
     * @type {EntHistorytakingEdges}
     * @memberof EntHistorytaking
     */
    edges?: EntHistorytakingEdges;
    /**
     * Hight holds the value of the "hight" field.
     * @type {number}
     * @memberof EntHistorytaking
     */
    hight?: number;
    /**
     * ID of the ent.
     * @type {number}
     * @memberof EntHistorytaking
     */
    id?: number;
    /**
     * Oxygen holds the value of the "oxygen" field.
     * @type {string}
     * @memberof EntHistorytaking
     */
    oxygen?: string;
    /**
     * Pulse holds the value of the "pulse" field.
     * @type {number}
     * @memberof EntHistorytaking
     */
    pulse?: number;
    /**
     * Respiration holds the value of the "respiration" field.
     * @type {number}
     * @memberof EntHistorytaking
     */
    respiration?: number;
    /**
     * Symptom holds the value of the "symptom" field.
     * @type {string}
     * @memberof EntHistorytaking
     */
    symptom?: string;
    /**
     * Temp holds the value of the "temp" field.
     * @type {number}
     * @memberof EntHistorytaking
     */
    temp?: number;
    /**
     * Weight holds the value of the "weight" field.
     * @type {number}
     * @memberof EntHistorytaking
     */
    weight?: number;
}

export function EntHistorytakingFromJSON(json: any): EntHistorytaking {
    return EntHistorytakingFromJSONTyped(json, false);
}

export function EntHistorytakingFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntHistorytaking {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bp': !exists(json, 'bp') ? undefined : json['bp'],
        'datetime': !exists(json, 'datetime') ? undefined : json['datetime'],
        'edges': !exists(json, 'edges') ? undefined : EntHistorytakingEdgesFromJSON(json['edges']),
        'hight': !exists(json, 'hight') ? undefined : json['hight'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'oxygen': !exists(json, 'oxygen') ? undefined : json['oxygen'],
        'pulse': !exists(json, 'pulse') ? undefined : json['pulse'],
        'respiration': !exists(json, 'respiration') ? undefined : json['respiration'],
        'symptom': !exists(json, 'symptom') ? undefined : json['symptom'],
        'temp': !exists(json, 'temp') ? undefined : json['temp'],
        'weight': !exists(json, 'weight') ? undefined : json['weight'],
    };
}

export function EntHistorytakingToJSON(value?: EntHistorytaking | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bp': value.bp,
        'datetime': value.datetime,
        'edges': EntHistorytakingEdgesToJSON(value.edges),
        'hight': value.hight,
        'id': value.id,
        'oxygen': value.oxygen,
        'pulse': value.pulse,
        'respiration': value.respiration,
        'symptom': value.symptom,
        'temp': value.temp,
        'weight': value.weight,
    };
}


