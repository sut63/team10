/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntPatientrights,
    EntPatientrightsFromJSON,
    EntPatientrightsFromJSONTyped,
    EntPatientrightsToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntAbilitypatientrightsEdges
 */
export interface EntAbilitypatientrightsEdges {
    /**
     * EdgesOfAbilitypatientrightsPatientrights holds the value of the EdgesOfAbilitypatientrightsPatientrights edge.
     * @type {Array<EntPatientrights>}
     * @memberof EntAbilitypatientrightsEdges
     */
    edgesOfAbilitypatientrightsPatientrights?: Array<EntPatientrights>;
}

export function EntAbilitypatientrightsEdgesFromJSON(json: any): EntAbilitypatientrightsEdges {
    return EntAbilitypatientrightsEdgesFromJSONTyped(json, false);
}

export function EntAbilitypatientrightsEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntAbilitypatientrightsEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'edgesOfAbilitypatientrightsPatientrights': !exists(json, 'edgesOfAbilitypatientrightsPatientrights') ? undefined : ((json['edgesOfAbilitypatientrightsPatientrights'] as Array<any>).map(EntPatientrightsFromJSON)),
    };
}

export function EntAbilitypatientrightsEdgesToJSON(value?: EntAbilitypatientrightsEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'edgesOfAbilitypatientrightsPatientrights': value.edgesOfAbilitypatientrightsPatientrights === undefined ? undefined : ((value.edgesOfAbilitypatientrightsPatientrights as Array<any>).map(EntPatientrightsToJSON)),
    };
}


