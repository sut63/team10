/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntTreatmentEdges,
    EntTreatmentEdgesFromJSON,
    EntTreatmentEdgesFromJSONTyped,
    EntTreatmentEdgesToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntTreatment
 */
export interface EntTreatment {
    /**
     * Datetreat holds the value of the "Datetreat" field.
     * @type {string}
     * @memberof EntTreatment
     */
    datetreat?: string;
    /**
     * Medicine holds the value of the "Medicine" field.
     * @type {string}
     * @memberof EntTreatment
     */
    medicine?: string;
    /**
     * Symptom holds the value of the "Symptom" field.
     * @type {string}
     * @memberof EntTreatment
     */
    symptom?: string;
    /**
     * Treat holds the value of the "Treat" field.
     * @type {string}
     * @memberof EntTreatment
     */
    treat?: string;
    /**
     * 
     * @type {EntTreatmentEdges}
     * @memberof EntTreatment
     */
    edges?: EntTreatmentEdges;
    /**
     * ID of the ent.
     * @type {number}
     * @memberof EntTreatment
     */
    id?: number;
}

export function EntTreatmentFromJSON(json: any): EntTreatment {
    return EntTreatmentFromJSONTyped(json, false);
}

export function EntTreatmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntTreatment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'datetreat': !exists(json, 'Datetreat') ? undefined : json['Datetreat'],
        'medicine': !exists(json, 'Medicine') ? undefined : json['Medicine'],
        'symptom': !exists(json, 'Symptom') ? undefined : json['Symptom'],
        'treat': !exists(json, 'Treat') ? undefined : json['Treat'],
        'edges': !exists(json, 'edges') ? undefined : EntTreatmentEdgesFromJSON(json['edges']),
        'id': !exists(json, 'id') ? undefined : json['id'],
    };
}

export function EntTreatmentToJSON(value?: EntTreatment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Datetreat': value.datetreat,
        'Medicine': value.medicine,
        'Symptom': value.symptom,
        'Treat': value.treat,
        'edges': EntTreatmentEdgesToJSON(value.edges),
        'id': value.id,
    };
}


