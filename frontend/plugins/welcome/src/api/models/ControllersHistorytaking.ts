/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ControllersHistorytaking
 */
export interface ControllersHistorytaking {
    /**
     * 
     * @type {number}
     * @memberof ControllersHistorytaking
     */
    bp?: number;
    /**
     * 
     * @type {string}
     * @memberof ControllersHistorytaking
     */
    datetime?: string;
    /**
     * 
     * @type {number}
     * @memberof ControllersHistorytaking
     */
    department?: number;
    /**
     * 
     * @type {number}
     * @memberof ControllersHistorytaking
     */
    hight?: number;
    /**
     * 
     * @type {number}
     * @memberof ControllersHistorytaking
     */
    nurse?: number;
    /**
     * 
     * @type {string}
     * @memberof ControllersHistorytaking
     */
    oxygen?: string;
    /**
     * 
     * @type {number}
     * @memberof ControllersHistorytaking
     */
    patientrecord?: number;
    /**
     * 
     * @type {number}
     * @memberof ControllersHistorytaking
     */
    pulse?: number;
    /**
     * 
     * @type {number}
     * @memberof ControllersHistorytaking
     */
    respiration?: number;
    /**
     * 
     * @type {string}
     * @memberof ControllersHistorytaking
     */
    symptom?: string;
    /**
     * 
     * @type {number}
     * @memberof ControllersHistorytaking
     */
    symptomseverity?: number;
    /**
     * 
     * @type {number}
     * @memberof ControllersHistorytaking
     */
    temp?: number;
    /**
     * 
     * @type {number}
     * @memberof ControllersHistorytaking
     */
    weight?: number;
}

export function ControllersHistorytakingFromJSON(json: any): ControllersHistorytaking {
    return ControllersHistorytakingFromJSONTyped(json, false);
}

export function ControllersHistorytakingFromJSONTyped(json: any, ignoreDiscriminator: boolean): ControllersHistorytaking {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bp': !exists(json, 'bp') ? undefined : json['bp'],
        'datetime': !exists(json, 'datetime') ? undefined : json['datetime'],
        'department': !exists(json, 'department') ? undefined : json['department'],
        'hight': !exists(json, 'hight') ? undefined : json['hight'],
        'nurse': !exists(json, 'nurse') ? undefined : json['nurse'],
        'oxygen': !exists(json, 'oxygen') ? undefined : json['oxygen'],
        'patientrecord': !exists(json, 'patientrecord') ? undefined : json['patientrecord'],
        'pulse': !exists(json, 'pulse') ? undefined : json['pulse'],
        'respiration': !exists(json, 'respiration') ? undefined : json['respiration'],
        'symptom': !exists(json, 'symptom') ? undefined : json['symptom'],
        'symptomseverity': !exists(json, 'symptomseverity') ? undefined : json['symptomseverity'],
        'temp': !exists(json, 'temp') ? undefined : json['temp'],
        'weight': !exists(json, 'weight') ? undefined : json['weight'],
    };
}

export function ControllersHistorytakingToJSON(value?: ControllersHistorytaking | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bp': value.bp,
        'datetime': value.datetime,
        'department': value.department,
        'hight': value.hight,
        'nurse': value.nurse,
        'oxygen': value.oxygen,
        'patientrecord': value.patientrecord,
        'pulse': value.pulse,
        'respiration': value.respiration,
        'symptom': value.symptom,
        'symptomseverity': value.symptomseverity,
        'temp': value.temp,
        'weight': value.weight,
    };
}


