/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntBloodtype,
    EntBloodtypeFromJSON,
    EntBloodtypeFromJSONTyped,
    EntBloodtypeToJSON,
    EntGender,
    EntGenderFromJSON,
    EntGenderFromJSONTyped,
    EntGenderToJSON,
    EntHistorytaking,
    EntHistorytakingFromJSON,
    EntHistorytakingFromJSONTyped,
    EntHistorytakingToJSON,
    EntMedicalrecordstaff,
    EntMedicalrecordstaffFromJSON,
    EntMedicalrecordstaffFromJSONTyped,
    EntMedicalrecordstaffToJSON,
    EntPatientrights,
    EntPatientrightsFromJSON,
    EntPatientrightsFromJSONTyped,
    EntPatientrightsToJSON,
    EntPrename,
    EntPrenameFromJSON,
    EntPrenameFromJSONTyped,
    EntPrenameToJSON,
    EntTreatment,
    EntTreatmentFromJSON,
    EntTreatmentFromJSONTyped,
    EntTreatmentToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntPatientrecordEdges
 */
export interface EntPatientrecordEdges {
    /**
     * 
     * @type {EntBloodtype}
     * @memberof EntPatientrecordEdges
     */
    edgesOfBloodtype?: EntBloodtype;
    /**
     * 
     * @type {EntGender}
     * @memberof EntPatientrecordEdges
     */
    edgesOfGender?: EntGender;
    /**
     * EdgesOfHistorytaking holds the value of the EdgesOfHistorytaking edge.
     * @type {Array<EntHistorytaking>}
     * @memberof EntPatientrecordEdges
     */
    edgesOfHistorytaking?: Array<EntHistorytaking>;
    /**
     * 
     * @type {EntMedicalrecordstaff}
     * @memberof EntPatientrecordEdges
     */
    edgesOfMedicalrecordstaff?: EntMedicalrecordstaff;
    /**
     * EdgesOfPatientrecordPatientrights holds the value of the EdgesOfPatientrecordPatientrights edge.
     * @type {Array<EntPatientrights>}
     * @memberof EntPatientrecordEdges
     */
    edgesOfPatientrecordPatientrights?: Array<EntPatientrights>;
    /**
     * 
     * @type {EntPrename}
     * @memberof EntPatientrecordEdges
     */
    edgesOfPrename?: EntPrename;
    /**
     * EdgesOfTreatment holds the value of the EdgesOfTreatment edge.
     * @type {Array<EntTreatment>}
     * @memberof EntPatientrecordEdges
     */
    edgesOfTreatment?: Array<EntTreatment>;
}

export function EntPatientrecordEdgesFromJSON(json: any): EntPatientrecordEdges {
    return EntPatientrecordEdgesFromJSONTyped(json, false);
}

export function EntPatientrecordEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntPatientrecordEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'edgesOfBloodtype': !exists(json, 'EdgesOfBloodtype') ? undefined : EntBloodtypeFromJSON(json['EdgesOfBloodtype']),
        'edgesOfGender': !exists(json, 'EdgesOfGender') ? undefined : EntGenderFromJSON(json['EdgesOfGender']),
        'edgesOfHistorytaking': !exists(json, 'EdgesOfHistorytaking') ? undefined : ((json['EdgesOfHistorytaking'] as Array<any>).map(EntHistorytakingFromJSON)),
        'edgesOfMedicalrecordstaff': !exists(json, 'EdgesOfMedicalrecordstaff') ? undefined : EntMedicalrecordstaffFromJSON(json['EdgesOfMedicalrecordstaff']),
        'edgesOfPatientrecordPatientrights': !exists(json, 'EdgesOfPatientrecordPatientrights') ? undefined : ((json['EdgesOfPatientrecordPatientrights'] as Array<any>).map(EntPatientrightsFromJSON)),
        'edgesOfPrename': !exists(json, 'EdgesOfPrename') ? undefined : EntPrenameFromJSON(json['EdgesOfPrename']),
        'edgesOfTreatment': !exists(json, 'EdgesOfTreatment') ? undefined : ((json['EdgesOfTreatment'] as Array<any>).map(EntTreatmentFromJSON)),
    };
}

export function EntPatientrecordEdgesToJSON(value?: EntPatientrecordEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'EdgesOfBloodtype': EntBloodtypeToJSON(value.edgesOfBloodtype),
        'EdgesOfGender': EntGenderToJSON(value.edgesOfGender),
        'EdgesOfHistorytaking': value.edgesOfHistorytaking === undefined ? undefined : ((value.edgesOfHistorytaking as Array<any>).map(EntHistorytakingToJSON)),
        'EdgesOfMedicalrecordstaff': EntMedicalrecordstaffToJSON(value.edgesOfMedicalrecordstaff),
        'EdgesOfPatientrecordPatientrights': value.edgesOfPatientrecordPatientrights === undefined ? undefined : ((value.edgesOfPatientrecordPatientrights as Array<any>).map(EntPatientrightsToJSON)),
        'EdgesOfPrename': EntPrenameToJSON(value.edgesOfPrename),
        'EdgesOfTreatment': value.edgesOfTreatment === undefined ? undefined : ((value.edgesOfTreatment as Array<any>).map(EntTreatmentToJSON)),
    };
}


