/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntDoctorinfo,
    EntDoctorinfoFromJSON,
    EntDoctorinfoFromJSONTyped,
    EntDoctorinfoToJSON,
    EntTreatment,
    EntTreatmentFromJSON,
    EntTreatmentFromJSONTyped,
    EntTreatmentToJSON,
    EntUser,
    EntUserFromJSON,
    EntUserFromJSONTyped,
    EntUserToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntDoctorEdges
 */
export interface EntDoctorEdges {
    /**
     * 
     * @type {EntDoctorinfo}
     * @memberof EntDoctorEdges
     */
    doctorinfo?: EntDoctorinfo;
    /**
     * Treatment holds the value of the treatment edge.
     * @type {Array<EntTreatment>}
     * @memberof EntDoctorEdges
     */
    treatment?: Array<EntTreatment>;
    /**
     * 
     * @type {EntUser}
     * @memberof EntDoctorEdges
     */
    user?: EntUser;
}

export function EntDoctorEdgesFromJSON(json: any): EntDoctorEdges {
    return EntDoctorEdgesFromJSONTyped(json, false);
}

export function EntDoctorEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntDoctorEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'doctorinfo': !exists(json, 'Doctorinfo') ? undefined : EntDoctorinfoFromJSON(json['Doctorinfo']),
        'treatment': !exists(json, 'Treatment') ? undefined : ((json['Treatment'] as Array<any>).map(EntTreatmentFromJSON)),
        'user': !exists(json, 'User') ? undefined : EntUserFromJSON(json['User']),
    };
}

export function EntDoctorEdgesToJSON(value?: EntDoctorEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'doctorinfo': EntDoctorinfoToJSON(value.doctorinfo),
        'treatment': value.treatment === undefined ? undefined : ((value.treatment as Array<any>).map(EntTreatmentToJSON)),
        'user': EntUserToJSON(value.user),
    };
}


